# Generated by Django 5.0.2 on 2024-05-06 20:25

import address.models
import django.db.models.deletion
import django.utils.timezone
import main.models
import multiselectfield.db.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0003_auto_20200830_1851'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('complete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CarrierGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UDSOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('externalid', models.CharField(max_length=500, null=True)),
                ('date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('name', models.CharField(max_length=500, null=True)),
                ('user_name', models.CharField(max_length=500)),
                ('company_name', models.CharField(max_length=500)),
                ('position', models.CharField(max_length=500, null=True)),
                ('website', models.CharField(max_length=500, null=True)),
                ('orders', models.CharField(max_length=500, null=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('about', models.TextField(blank=True, max_length=500, verbose_name='about')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_demo', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('company_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('onboard', models.BooleanField(default=False)),
                ('company_address', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Company Address+', to='address.address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company', models.CharField(blank=True, max_length=500, null=True, verbose_name='Company')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('contact', models.CharField(blank=True, max_length=500, null=True, verbose_name='Contact Name')),
                ('mainphone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Main Phone Number')),
                ('mobilephone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Mobile Phone Number')),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Fax')),
                ('mcnumber', models.IntegerField(blank=True, null=True)),
                ('usdotnumber', models.IntegerField(blank=True, null=True)),
                ('feinnumber', models.IntegerField(blank=True, null=True)),
                ('techprovider', models.CharField(blank=True, max_length=500, null=True, verbose_name='Tech Provider')),
                ('trackingtech', models.CharField(blank=True, max_length=500, null=True, verbose_name='Tracking Technology')),
                ('ownername', models.CharField(blank=True, max_length=500, null=True, verbose_name='Owner Name')),
                ('ownerphone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Owner Phone Number')),
                ('owneremail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Owner Email')),
                ('dispatchname', models.CharField(blank=True, max_length=500, null=True, verbose_name='Dispatch Name')),
                ('dispatchphone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Dispatch Phone Number')),
                ('dispatchemail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Dispatch Email')),
                ('accountingname', models.CharField(blank=True, max_length=500, null=True, verbose_name='Accounting Name')),
                ('accountingphone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Accounting Phone Number')),
                ('accountingemail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Accounting Email')),
                ('hazmat', models.BooleanField(blank=True, null=True, verbose_name='Hazmat')),
                ('smartway', models.BooleanField(blank=True, null=True, verbose_name='Smartway')),
                ('ltl', models.BooleanField(blank=True, null=True, verbose_name='Less than Load')),
                ('ftl', models.BooleanField(blank=True, null=True, verbose_name='Full Truckload')),
                ('b2b', models.BooleanField(blank=True, null=True, verbose_name='B2B')),
                ('tsa', models.BooleanField(blank=True, null=True, verbose_name='TSA')),
                ('lastmile', models.BooleanField(blank=True, null=True, verbose_name='Last Mile')),
                ('middlemile', models.BooleanField(blank=True, null=True, verbose_name='Middle Mile')),
                ('transloading', models.BooleanField(blank=True, null=True, verbose_name='Transloading')),
                ('airfreight', models.BooleanField(blank=True, null=True, verbose_name='Air Freight')),
                ('flatbeds', models.BooleanField(blank=True, null=True, verbose_name='Flat Beds')),
                ('otr', models.BooleanField(blank=True, null=True, verbose_name='Over The Road')),
                ('refrigerated', models.BooleanField(blank=True, null=True, verbose_name='Refrigerated')),
                ('hotshots', models.BooleanField(blank=True, null=True, verbose_name='Hot Shots')),
                ('localpickupanddelivery', models.BooleanField(blank=True, null=True, verbose_name='Local Pick up and Delivery')),
                ('expedited', models.BooleanField(blank=True, null=True, verbose_name='Expedited')),
                ('highvalue', models.BooleanField(blank=True, null=True, verbose_name='High Value')),
                ('drayage', models.BooleanField(blank=True, null=True, verbose_name='Drayage')),
                ('whiteglove', models.BooleanField(blank=True, null=True, verbose_name='White Glove')),
                ('residential', models.BooleanField(blank=True, null=True, verbose_name='Residential')),
                ('insidedelivery', models.BooleanField(blank=True, null=True, verbose_name='Inside Delivery')),
                ('medical', models.BooleanField(blank=True, null=True, verbose_name='Medical')),
                ('hemp', models.BooleanField(blank=True, null=True, verbose_name='Hemp')),
                ('airport', models.BooleanField(blank=True, null=True, verbose_name='Airport Recovery')),
                ('lastmileqty', models.IntegerField(blank=True, null=True, verbose_name='Last Mile Quantity')),
                ('tsaqty', models.IntegerField(blank=True, null=True, verbose_name='TSA Mile Quantity')),
                ('automobileqty', models.IntegerField(blank=True, null=True, verbose_name='Automobile Quantity')),
                ('highcubedqty', models.IntegerField(blank=True, null=True, verbose_name='High Cubed Quantity')),
                ('sprinterqty', models.IntegerField(blank=True, null=True, verbose_name='Sprinter Van Quantity')),
                ('straughttruckqty', models.IntegerField(blank=True, null=True, verbose_name='Straight Truck Quantity')),
                ('dryvanqty', models.IntegerField(blank=True, null=True, verbose_name='Dry Van Quantity')),
                ('reeferqty', models.IntegerField(blank=True, null=True, verbose_name='Refrigerated Trailer Quantity')),
                ('flatbedqty', models.IntegerField(blank=True, null=True, verbose_name='Flat Bed Quantity')),
                ('warehousesqft', models.IntegerField(blank=True, null=True, verbose_name='Warehouse Square Feet')),
                ('totaltruckqty', models.IntegerField(blank=True, null=True, verbose_name='Total Truck Quantity')),
                ('is_totaltruckqty_auto', models.BooleanField(default=True, verbose_name='Is Total Truck Quantity Auto Calculated?')),
                ('inductionfacilityloc1_temp_controlled', models.BooleanField(default=False, verbose_name='Induction Facility Location 1 Temperature Controlled')),
                ('inductionfacilityloc2_temp_controlled', models.BooleanField(default=False, verbose_name='Induction Facility Location 2 Temperature Controlled')),
                ('inductionfacilityloc3_temp_controlled', models.BooleanField(default=False, verbose_name='Induction Facility Location 3 Temperature Controlled')),
                ('inductionfacilityloc4_temp_controlled', models.BooleanField(default=False, verbose_name='Induction Facility Location 4 Temperature Controlled')),
                ('inductionfacilityloc5_temp_controlled', models.BooleanField(default=False, verbose_name='Induction Facility Location 5 Temperature Controlled')),
                ('coverageradius', models.IntegerField(blank=True, null=True, verbose_name='Coverage Radius')),
                ('usservice', models.TextField(blank=True, null=True, verbose_name='Domestic Service')),
                ('canservice', models.TextField(blank=True, null=True, verbose_name='Canada Service')),
                ('mexservice', models.TextField(blank=True, null=True, verbose_name='Mexico Service')),
                ('w9', models.FileField(blank=True, null=True, upload_to='carriers/', verbose_name='W-9')),
                ('insurance', models.FileField(blank=True, null=True, upload_to='carriers/', verbose_name='Insurance Agreement')),
                ('operatingauth', models.FileField(blank=True, null=True, upload_to='carriers/', verbose_name='Operating Authority')),
                ('zipcoverage', models.FileField(blank=True, null=True, upload_to='carriers/', verbose_name='Zip Code Coverage Area')),
                ('carrierbroker', models.CharField(blank=True, max_length=500, null=True, verbose_name='Carrier Broker')),
                ('manualcarrierbroker', models.FileField(blank=True, null=True, upload_to='carriers/', verbose_name='Manual Carrier Broker')),
                ('insuranceexp', models.DateField(blank=True, null=True, verbose_name='Insurance Experiation Date')),
                ('courier', models.BooleanField(default=False, verbose_name='Check for Courier')),
                ('sign_page_url', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Signed Page Url')),
                ('contractsigned', models.BooleanField(default=False, verbose_name='Contract Signed')),
                ('skip_signal', models.BooleanField(default=False)),
                ('update', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('onboarded', models.BooleanField(default=False, verbose_name='Onboarded')),
                ('is_onboarded_auto', models.BooleanField(default=True, verbose_name='Is onboarded auto?')),
                ('address', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='address.address', verbose_name='Company Address')),
                ('inductionfacilityloc1', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inductionlocation1', to='address.address', verbose_name='Induction Facility 1')),
                ('inductionfacilityloc2', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inductionlocation2', to='address.address', verbose_name='Induction Facility 2')),
                ('inductionfacilityloc3', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inductionlocation3', to='address.address', verbose_name='Induction Facility 3')),
                ('inductionfacilityloc4', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inductionlocation4', to='address.address', verbose_name='Induction Facility 4')),
                ('inductionfacilityloc5', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inductionlocation5', to='address.address', verbose_name='Induction Facility 5')),
                ('group', models.ManyToManyField(blank=True, to='main.carriergroup')),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('accepted', models.BooleanField(default=False)),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='main.auction')),
                ('carrier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='main.carrier')),
            ],
        ),
        migrations.AddField(
            model_name='auction',
            name='carriers',
            field=models.ManyToManyField(related_name='auctions', to='main.carrier'),
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel')], max_length=5)),
                ('deliverystatus', multiselectfield.db.fields.MultiSelectField(choices=[('placed', 'Placed'), ('confirmed', 'Confirmed'), ('delivered', 'Delivered'), ('pickedup', 'PickedUp'), ('statusCodeAdded', 'StatusCodeAdded'), ('attempted', 'Attempted Delivery')], max_length=17, null=True)),
                ('schedule', models.CharField(choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Bi-Weekly', 'Bi-Weekly'), ('Monthly', 'Monthly')], default=1, max_length=10, null=True)),
                ('email', models.TextField(null=True)),
                ('subject', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=main.models.GeneratedReport.user_directory_path)),
                ('is_automated', models.BooleanField(default=False)),
                ('automate', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InboundOrderCSV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('csv', models.FileField(upload_to='csvs')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LabelGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_delivery_date', models.DateField(blank=True)),
                ('csv', models.FileField(blank=True, null=True, upload_to='labelcsvs/')),
                ('ref1col', models.CharField(blank=True, max_length=1, null=True)),
                ('ref2col', models.CharField(blank=True, max_length=1, null=True)),
                ('ref3col', models.CharField(blank=True, max_length=1, null=True)),
                ('address1col', models.CharField(blank=True, max_length=1, null=True)),
                ('address2col', models.CharField(blank=True, max_length=1, null=True)),
                ('citycol', models.CharField(blank=True, max_length=1, null=True)),
                ('statecol', models.CharField(blank=True, max_length=1, null=True)),
                ('zipcol', models.CharField(blank=True, max_length=1, null=True)),
                ('istrcol', models.CharField(blank=True, max_length=1, null=True)),
                ('namecol', models.CharField(blank=True, max_length=1, null=True)),
                ('tangelogroupcol', models.CharField(blank=True, max_length=1, null=True)),
                ('tangelonumberscol', models.CharField(blank=True, max_length=1, null=True)),
                ('from_address', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Group Label Pickup Address+', to='address.address')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, null=True)),
                ('address1', models.CharField(max_length=500, null=True)),
                ('address2', models.CharField(max_length=500, null=True)),
                ('city', models.CharField(max_length=500, null=True)),
                ('state', models.CharField(max_length=500, null=True)),
                ('zip', models.CharField(max_length=500, null=True)),
                ('expected_delivery_date', models.DateField()),
                ('ref1', models.CharField(max_length=500, null=True)),
                ('ref2', models.CharField(max_length=500, null=True)),
                ('ref3', models.CharField(max_length=500, null=True)),
                ('instr', models.CharField(max_length=250, null=True)),
                ('tangelogroup', models.CharField(max_length=500, null=True)),
                ('tangelonumbers', models.CharField(max_length=1000, null=True)),
                ('from_address', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Label Pickup Address+', to='address.address')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.labelgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('externalid', models.CharField(max_length=500, null=True)),
                ('deliverystatus', models.CharField(choices=[('placed', 'Placed'), ('confirmed', 'Confirmed'), ('delivered', 'Delivered'), ('pickedup', 'PickedUp'), ('statusCodeAdded', 'StatusCodeAdded'), ('attempted', 'Attempted Delivery')], max_length=500, null=True)),
                ('statuscode', models.CharField(max_length=500, null=True)),
                ('delivery', models.DateTimeField(null=True)),
                ('estimateddelivery', models.DateTimeField(null=True)),
                ('departed', models.DateTimeField(null=True)),
                ('placed', models.DateTimeField(null=True)),
                ('podname', models.CharField(max_length=500, null=True)),
                ('podcomments', models.TextField(null=True)),
                ('signature', models.TextField(null=True)),
                ('latitude', models.CharField(max_length=500, null=True)),
                ('longitude', models.CharField(max_length=500, null=True)),
                ('imageid', models.CharField(max_length=500, null=True)),
                ('confirmationimage', models.TextField(null=True)),
                ('customername', models.CharField(max_length=300, null=True)),
                ('customerphone', models.CharField(max_length=500, null=True)),
                ('customeraddress', models.CharField(max_length=300, null=True)),
                ('customeraddress2', models.CharField(max_length=300, null=True)),
                ('customercity', models.CharField(max_length=300, null=True)),
                ('customerstate', models.CharField(max_length=300, null=True)),
                ('customerzip', models.CharField(max_length=300, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderCSV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('csv', models.FileField(upload_to='csvs')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PricingAgreementFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='pricing_agreements/')),
                ('your_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_agreements', to='main.carrier')),
            ],
        ),
        migrations.CreateModel(
            name='PricingProposalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='pricing_proposals/')),
                ('your_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_proposals', to='main.carrier')),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('responded', models.DateTimeField(blank=True, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('dedicated', models.BooleanField(default=False)),
                ('hempinsurance', models.IntegerField(blank=True, null=True)),
                ('service', models.CharField(max_length=500, null=True)),
                ('commodity', models.CharField(max_length=500, null=True)),
                ('weight', models.CharField(max_length=500, null=True)),
                ('dimensions', models.CharField(max_length=500, null=True)),
                ('quantity', models.CharField(max_length=500, null=True)),
                ('pieces', models.CharField(max_length=500, null=True)),
                ('traveltime', models.CharField(max_length=500, null=True)),
                ('cost', models.IntegerField(null=True)),
                ('ccemails', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('livequote', models.BooleanField(default=True)),
                ('accepted', models.BooleanField(null=True)),
                ('dropoff', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Dropoff Address+', to='address.address')),
                ('pickup', address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Pickup Address+', to='address.address')),
            ],
        ),
        migrations.AddField(
            model_name='auction',
            name='quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.quote'),
        ),
        migrations.CreateModel(
            name='QuoteAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=500, null=True)),
                ('email', models.CharField(max_length=500, null=True)),
                ('contact', models.CharField(max_length=500, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('address', address.models.AddressField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='address.address')),
            ],
        ),
        migrations.AddField(
            model_name='quote',
            name='account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.quoteaccount'),
        ),
        migrations.CreateModel(
            name='RejectedQuote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(null=True, verbose_name='To enhance our service to you and others, could you please provide us with feedback or suggest any modifications to your quote?')),
                ('quote', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.quote')),
            ],
        ),
        migrations.CreateModel(
            name='ReportFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('customercity', models.CharField(max_length=300, null=True)),
                ('customerstate', models.CharField(max_length=300, null=True)),
                ('deliverystatus', multiselectfield.db.fields.MultiSelectField(choices=[('placed', 'Placed'), ('confirmed', 'Confirmed'), ('delivered', 'Delivered'), ('pickedup', 'PickedUp'), ('statusCodeAdded', 'StatusCodeAdded'), ('attempted', 'Attempted Delivery')], max_length=17, null=True)),
                ('address', models.CharField(max_length=500, null=True)),
                ('customername', models.CharField(max_length=300, null=True)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report_filter', to='main.generatedreport')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='support_messages/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TemplatedFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('customercity', models.CharField(max_length=300, null=True)),
                ('customerstate', models.CharField(max_length=300, null=True)),
                ('deliverystatus', multiselectfield.db.fields.MultiSelectField(choices=[('placed', 'Placed'), ('confirmed', 'Confirmed'), ('delivered', 'Delivered'), ('pickedup', 'PickedUp'), ('statusCodeAdded', 'StatusCodeAdded'), ('attempted', 'Attempted Delivery')], max_length=17, null=True)),
                ('address', models.CharField(max_length=500, null=True)),
                ('customername', models.CharField(max_length=300, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WebHook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EventType', models.CharField(max_length=500, null=True)),
                ('OrderID', models.CharField(max_length=500, null=True)),
                ('CustID', models.CharField(max_length=500, null=True)),
                ('Status', models.CharField(max_length=500, null=True)),
                ('Caller', models.CharField(max_length=500, null=True)),
                ('CustomerBillingGroup', models.CharField(max_length=500, null=True)),
                ('CSR', models.CharField(max_length=500, null=True)),
                ('OrderDate', models.DateTimeField(null=True)),
                ('ReadyTimeFrom', models.CharField(max_length=500, null=True)),
                ('ReadyTimeTo', models.CharField(max_length=500, null=True)),
                ('DueTimeFrom', models.CharField(max_length=500, null=True)),
                ('DueTimeTo', models.CharField(max_length=500, null=True)),
                ('Reference1', models.CharField(max_length=500, null=True)),
                ('Reference2', models.CharField(max_length=500, null=True)),
                ('OriginName', models.CharField(max_length=500, null=True)),
                ('OriginAddress', models.CharField(max_length=500, null=True)),
                ('OriginCity', models.CharField(max_length=500, null=True)),
                ('OriginState', models.CharField(max_length=500, null=True)),
                ('OriginZip', models.CharField(max_length=500, null=True)),
                ('OriginPlus4', models.CharField(max_length=500, null=True)),
                ('OriginPhone', models.CharField(max_length=500, null=True)),
                ('OriginComments', models.CharField(max_length=500, null=True)),
                ('OriginValidated', models.CharField(max_length=500, null=True)),
                ('DestName', models.CharField(max_length=500, null=True)),
                ('DestAddress', models.CharField(max_length=500, null=True)),
                ('DestCity', models.CharField(max_length=500, null=True)),
                ('DestState', models.CharField(max_length=500, null=True)),
                ('DestZip', models.CharField(max_length=500, null=True)),
                ('DestPlus4', models.CharField(max_length=500, null=True)),
                ('DestPhone', models.CharField(max_length=500, null=True)),
                ('DestComments', models.CharField(max_length=500, null=True)),
                ('DestValidated', models.CharField(max_length=500, null=True)),
                ('Pieces', models.CharField(max_length=500, null=True)),
                ('ParcelLength', models.CharField(max_length=500, null=True)),
                ('ParcelWidth', models.CharField(max_length=500, null=True)),
                ('ParcelHeight', models.CharField(max_length=500, null=True)),
                ('Weight', models.CharField(max_length=500, null=True)),
                ('OrderType', models.CharField(max_length=500, null=True)),
                ('SpecialInst', models.CharField(max_length=500, null=True)),
                ('Distance', models.CharField(max_length=500, null=True)),
                ('Route', models.CharField(max_length=500, null=True)),
                ('RouteStop', models.CharField(max_length=500, null=True)),
                ('IsParent', models.CharField(max_length=500, null=True)),
                ('EmailPod', models.CharField(max_length=500, null=True)),
                ('Workstation', models.CharField(max_length=500, null=True)),
                ('ReadyToDay', models.CharField(max_length=500, null=True)),
                ('DueFromDay', models.CharField(max_length=500, null=True)),
                ('DueToDay', models.CharField(max_length=500, null=True)),
                ('RateLockedBy', models.CharField(max_length=500, null=True)),
                ('SettlementStatus', models.CharField(max_length=500, null=True)),
                ('EmailPODChecked', models.CharField(max_length=500, null=True)),
                ('EmailPOPChecked', models.CharField(max_length=500, null=True)),
                ('EmailOrderConfirmationChecked', models.CharField(max_length=500, null=True)),
                ('OriginLat', models.CharField(max_length=500, null=True)),
                ('OriginLon', models.CharField(max_length=500, null=True)),
                ('DestLat', models.CharField(max_length=500, null=True)),
                ('DestLon', models.CharField(max_length=500, null=True)),
                ('DriverPayLockedBy', models.CharField(max_length=500, null=True)),
                ('DispatchFlag', models.CharField(max_length=500, null=True)),
                ('BOL', models.CharField(max_length=500, null=True)),
                ('MasterBOL', models.CharField(max_length=500, null=True)),
                ('OrderCount', models.CharField(max_length=500, null=True)),
                ('OriginCountry', models.CharField(max_length=500, null=True)),
                ('DestCountry', models.CharField(max_length=500, null=True)),
                ('OriginAddress2', models.CharField(max_length=500, null=True)),
                ('DestAddress2', models.CharField(max_length=500, null=True)),
                ('RequiredDriverInput', models.CharField(max_length=500, null=True)),
                ('RequiredDriverInputTypeDescription', models.CharField(max_length=500, null=True)),
                ('Signature', models.TextField(null=True)),
                ('AssignedFleet', models.CharField(max_length=500, null=True)),
                ('Barcode', models.CharField(max_length=500, null=True)),
                ('Ordered', models.CharField(max_length=500, null=True)),
                ('Dispatched', models.CharField(max_length=500, null=True)),
                ('Confirmed', models.CharField(max_length=500, null=True)),
                ('AtOrigin', models.CharField(max_length=500, null=True)),
                ('ScannedAtPickup', models.CharField(max_length=500, null=True)),
                ('PickedUp', models.DateTimeField(null=True)),
                ('AtDestination', models.CharField(max_length=500, null=True)),
                ('ScannedAtDelivery', models.CharField(max_length=500, null=True)),
                ('Delivered', models.DateTimeField(null=True)),
                ('Pod', models.CharField(max_length=500, null=True)),
                ('PodComments', models.CharField(max_length=500, null=True)),
                ('PaidDocument', models.CharField(max_length=500, null=True)),
                ('CreatedBy', models.CharField(max_length=500, null=True)),
                ('CreatedWhen', models.CharField(max_length=500, null=True)),
                ('UpdatedBy', models.CharField(max_length=500, null=True)),
                ('UpdatedWhen', models.CharField(max_length=500, null=True)),
                ('DepotScan', models.CharField(max_length=500, null=True)),
                ('LocalName', models.CharField(max_length=500, null=True)),
                ('LocalAddress', models.CharField(max_length=500, null=True)),
                ('LocalAddress2', models.CharField(max_length=500, null=True)),
                ('LocalCity', models.CharField(max_length=500, null=True)),
                ('LocalState', models.CharField(max_length=500, null=True)),
                ('LocalZip', models.CharField(max_length=500, null=True)),
                ('LocalPlus4', models.CharField(max_length=500, null=True)),
                ('LocalPhone1', models.CharField(max_length=500, null=True)),
                ('LocalPhone2', models.CharField(max_length=500, null=True)),
                ('LocalEmail', models.CharField(max_length=500, null=True)),
                ('LocalContact', models.CharField(max_length=500, null=True)),
                ('ParcelPKID', models.CharField(max_length=500, null=True)),
                ('ParcelPieces', models.CharField(max_length=500, null=True)),
                ('ParcelWeight', models.CharField(max_length=500, null=True)),
                ('ParcelReference', models.CharField(max_length=500, null=True)),
                ('ParcelType', models.CharField(max_length=500, null=True)),
                ('DriverPKID', models.CharField(max_length=500, null=True)),
                ('DriverDriverID', models.CharField(max_length=500, null=True)),
                ('DriverDriverPercent', models.CharField(max_length=500, null=True)),
                ('DriverCreatedBy', models.CharField(max_length=500, null=True)),
                ('DriverCreatedWhen', models.CharField(max_length=500, null=True)),
                ('DriverUpdatedBy', models.CharField(max_length=500, null=True)),
                ('DriverUpdatedWhen', models.CharField(max_length=500, null=True)),
                ('DriverPayAmount', models.CharField(max_length=500, null=True)),
                ('DriverFirstName', models.CharField(max_length=500, null=True)),
                ('DriverLastName', models.CharField(max_length=500, null=True)),
                ('DriverVehicleDescription', models.CharField(max_length=500, null=True)),
                ('DriverVehicleLicensePlate', models.CharField(max_length=500, null=True)),
                ('DriverVehicleLicenseState', models.CharField(max_length=500, null=True)),
                ('DriverFleet', models.CharField(max_length=500, null=True)),
                ('DriverLastReportLat', models.CharField(max_length=500, null=True)),
                ('DriverLastReportLon', models.CharField(max_length=500, null=True)),
                ('DriverLastReportTime', models.CharField(max_length=500, null=True)),
                ('imageid', models.CharField(max_length=500, null=True)),
                ('Order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_webhook', to='main.order')),
            ],
        ),
    ]
